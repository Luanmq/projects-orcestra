{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luanm\\\\Downloads\\\\a\\\\src\\\\components\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Todo from './Todo';\nimport TodoForm from './TodoForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    //Une as letras/palavras caso tenha muitos espaços vazios entre elas\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => item.id === todoId ? newValue : item));\n  };\n\n  const removeTodo = id => {\n    const removeArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removeArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quais os planos pra hoje?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      todos: todos,\n      completeTodo: completeTodo,\n      removeTodo: removeTodo,\n      updateTodo: updateTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoList, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","Todo","TodoForm","TodoList","todos","setTodos","addTodo","todo","text","test","newTodos","updateTodo","todoId","newValue","prev","map","item","id","removeTodo","removeArr","filter","completeTodo","updatedTodos","isComplete"],"sources":["C:/Users/luanm/Downloads/a/src/components/TodoList.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Todo from './Todo'\r\nimport TodoForm from './TodoForm'\r\n\r\nconst TodoList = () => {\r\n  const [todos, setTodos] = useState([])\r\n\r\n  const addTodo = todo => {\r\n    //Une as letras/palavras caso tenha muitos espaços vazios entre elas\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return\r\n    }\r\n\r\n    const newTodos = [todo, ...todos]\r\n\r\n    setTodos(newTodos)\r\n  }\r\n\r\n  const updateTodo = (todoId, newValue) => {\r\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n      return\r\n    }\r\n\r\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)))\r\n  }\r\n\r\n  const removeTodo = id => {\r\n    const removeArr = [...todos].filter(todo => todo.id !== id)\r\n\r\n    setTodos(removeArr)\r\n  }\r\n\r\n  const completeTodo = id => {\r\n    let updatedTodos = todos.map(todo => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete\r\n      }\r\n      return todo\r\n    })\r\n    setTodos(updatedTodos)\r\n  }\r\n\r\n  return (\r\n    <div className=\"todo-app\">\r\n      <h1>Quais os planos pra hoje?</h1>\r\n      <TodoForm onSubmit={addTodo} />\r\n      <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoList\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;EAEA,MAAMM,OAAO,GAAGC,IAAI,IAAI;IACtB;IACA,IAAI,CAACA,IAAI,CAACC,IAAN,IAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAlB,EAA2C;MACzC;IACD;;IAED,MAAME,QAAQ,GAAG,CAACH,IAAD,EAAO,GAAGH,KAAV,CAAjB;IAEAC,QAAQ,CAACK,QAAD,CAAR;EACD,CATD;;EAWA,MAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;IACvC,IAAI,CAACA,QAAQ,CAACL,IAAV,IAAkB,QAAQC,IAAR,CAAaI,QAAQ,CAACL,IAAtB,CAAtB,EAAmD;MACjD;IACD;;IAEDH,QAAQ,CAACS,IAAI,IAAIA,IAAI,CAACC,GAAL,CAASC,IAAI,IAAKA,IAAI,CAACC,EAAL,KAAYL,MAAZ,GAAqBC,QAArB,GAAgCG,IAAlD,CAAT,CAAR;EACD,CAND;;EAQA,MAAME,UAAU,GAAGD,EAAE,IAAI;IACvB,MAAME,SAAS,GAAG,CAAC,GAAGf,KAAJ,EAAWgB,MAAX,CAAkBb,IAAI,IAAIA,IAAI,CAACU,EAAL,KAAYA,EAAtC,CAAlB;IAEAZ,QAAQ,CAACc,SAAD,CAAR;EACD,CAJD;;EAMA,MAAME,YAAY,GAAGJ,EAAE,IAAI;IACzB,IAAIK,YAAY,GAAGlB,KAAK,CAACW,GAAN,CAAUR,IAAI,IAAI;MACnC,IAAIA,IAAI,CAACU,EAAL,KAAYA,EAAhB,EAAoB;QAClBV,IAAI,CAACgB,UAAL,GAAkB,CAAChB,IAAI,CAACgB,UAAxB;MACD;;MACD,OAAOhB,IAAP;IACD,CALkB,CAAnB;IAMAF,QAAQ,CAACiB,YAAD,CAAR;EACD,CARD;;EAUA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,QAAD;MAAU,QAAQ,EAAEhB;IAApB;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,IAAD;MAAM,KAAK,EAAEF,KAAb;MAAoB,YAAY,EAAEiB,YAAlC;MAAgD,UAAU,EAAEH,UAA5D;MAAwE,UAAU,EAAEP;IAApF;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CA7CD;;GAAMR,Q;;KAAAA,Q;AA+CN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}